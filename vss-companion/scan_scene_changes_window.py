# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scan_scene_changes_window.ui'
#
# Created: Sat Apr  5 22:59:10 2014
#      by: PyQt5 UI code generator 5.2.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(391, 434)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tabScan = QtWidgets.QWidget()
        self.tabScan.setObjectName("tabScan")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tabScan)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.treeWidget = QtWidgets.QTreeWidget(self.tabScan)
        self.treeWidget.setObjectName("treeWidget")
        self.treeWidget.headerItem().setTextAlignment(1, QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter)
        self.treeWidget.headerItem().setTextAlignment(2, QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter)
        self.treeWidget.header().setDefaultSectionSize(110)
        self.treeWidget.header().setStretchLastSection(False)
        self.verticalLayout_2.addWidget(self.treeWidget)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.checkBoxBogus = QtWidgets.QCheckBox(self.tabScan)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBoxBogus.sizePolicy().hasHeightForWidth())
        self.checkBoxBogus.setSizePolicy(sizePolicy)
        self.checkBoxBogus.setChecked(True)
        self.checkBoxBogus.setObjectName("checkBoxBogus")
        self.horizontalLayout_2.addWidget(self.checkBoxBogus)
        self.checkBoxMissing = QtWidgets.QCheckBox(self.tabScan)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBoxMissing.sizePolicy().hasHeightForWidth())
        self.checkBoxMissing.setSizePolicy(sizePolicy)
        self.checkBoxMissing.setChecked(True)
        self.checkBoxMissing.setObjectName("checkBoxMissing")
        self.horizontalLayout_2.addWidget(self.checkBoxMissing)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.toolButtonCancel = QtWidgets.QToolButton(self.tabScan)
        self.toolButtonCancel.setEnabled(False)
        self.toolButtonCancel.setMinimumSize(QtCore.QSize(64, 24))
        self.toolButtonCancel.setObjectName("toolButtonCancel")
        self.horizontalLayout_2.addWidget(self.toolButtonCancel)
        self.toolButtonScan = QtWidgets.QToolButton(self.tabScan)
        self.toolButtonScan.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButtonScan.sizePolicy().hasHeightForWidth())
        self.toolButtonScan.setSizePolicy(sizePolicy)
        self.toolButtonScan.setMinimumSize(QtCore.QSize(64, 24))
        self.toolButtonScan.setObjectName("toolButtonScan")
        self.horizontalLayout_2.addWidget(self.toolButtonScan)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.tabWidget.addTab(self.tabScan, "")
        self.tabParameters = QtWidgets.QWidget()
        self.tabParameters.setObjectName("tabParameters")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tabParameters)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(20, 8, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem1)
        self.gridLayoutParameters = QtWidgets.QGridLayout()
        self.gridLayoutParameters.setObjectName("gridLayoutParameters")
        self.labelRatio = QtWidgets.QLabel(self.tabParameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelRatio.sizePolicy().hasHeightForWidth())
        self.labelRatio.setSizePolicy(sizePolicy)
        self.labelRatio.setObjectName("labelRatio")
        self.gridLayoutParameters.addWidget(self.labelRatio, 2, 0, 1, 1)
        self.labelDifference = QtWidgets.QLabel(self.tabParameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelDifference.sizePolicy().hasHeightForWidth())
        self.labelDifference.setSizePolicy(sizePolicy)
        self.labelDifference.setToolTip("")
        self.labelDifference.setObjectName("labelDifference")
        self.gridLayoutParameters.addWidget(self.labelDifference, 1, 0, 1, 1)
        self.horizontalSliderDifference = QtWidgets.QSlider(self.tabParameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSliderDifference.sizePolicy().hasHeightForWidth())
        self.horizontalSliderDifference.setSizePolicy(sizePolicy)
        self.horizontalSliderDifference.setMaximum(100)
        self.horizontalSliderDifference.setProperty("value", 15)
        self.horizontalSliderDifference.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderDifference.setObjectName("horizontalSliderDifference")
        self.gridLayoutParameters.addWidget(self.horizontalSliderDifference, 1, 1, 1, 1)
        self.horizontalSliderRatio = QtWidgets.QSlider(self.tabParameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSliderRatio.sizePolicy().hasHeightForWidth())
        self.horizontalSliderRatio.setSizePolicy(sizePolicy)
        self.horizontalSliderRatio.setMinimum(1)
        self.horizontalSliderRatio.setMaximum(200)
        self.horizontalSliderRatio.setProperty("value", 30)
        self.horizontalSliderRatio.setSliderPosition(30)
        self.horizontalSliderRatio.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderRatio.setObjectName("horizontalSliderRatio")
        self.gridLayoutParameters.addWidget(self.horizontalSliderRatio, 2, 1, 1, 1)
        self.doubleSpinBoxRatio = QtWidgets.QDoubleSpinBox(self.tabParameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBoxRatio.sizePolicy().hasHeightForWidth())
        self.doubleSpinBoxRatio.setSizePolicy(sizePolicy)
        self.doubleSpinBoxRatio.setMinimumSize(QtCore.QSize(42, 0))
        self.doubleSpinBoxRatio.setMaximumSize(QtCore.QSize(42, 16777215))
        self.doubleSpinBoxRatio.setDecimals(1)
        self.doubleSpinBoxRatio.setMinimum(1.0)
        self.doubleSpinBoxRatio.setMaximum(20.0)
        self.doubleSpinBoxRatio.setSingleStep(0.1)
        self.doubleSpinBoxRatio.setProperty("value", 1.0)
        self.doubleSpinBoxRatio.setObjectName("doubleSpinBoxRatio")
        self.gridLayoutParameters.addWidget(self.doubleSpinBoxRatio, 2, 2, 1, 1)
        self.spinBoxDifference = QtWidgets.QSpinBox(self.tabParameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBoxDifference.sizePolicy().hasHeightForWidth())
        self.spinBoxDifference.setSizePolicy(sizePolicy)
        self.spinBoxDifference.setMinimumSize(QtCore.QSize(42, 0))
        self.spinBoxDifference.setMaximumSize(QtCore.QSize(42, 16777215))
        self.spinBoxDifference.setMaximum(100)
        self.spinBoxDifference.setProperty("value", 15)
        self.spinBoxDifference.setObjectName("spinBoxDifference")
        self.gridLayoutParameters.addWidget(self.spinBoxDifference, 1, 2, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.tabParameters)
        self.textEdit.setEnabled(True)
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.gridLayoutParameters.addWidget(self.textEdit, 3, 0, 1, 3)
        self.verticalLayout.addLayout(self.gridLayoutParameters)
        self.horizontalLayoutParametersButtons = QtWidgets.QHBoxLayout()
        self.horizontalLayoutParametersButtons.setObjectName("horizontalLayoutParametersButtons")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutParametersButtons.addItem(spacerItem2)
        self.toolButtonDefaults = QtWidgets.QToolButton(self.tabParameters)
        self.toolButtonDefaults.setMinimumSize(QtCore.QSize(64, 24))
        self.toolButtonDefaults.setObjectName("toolButtonDefaults")
        self.horizontalLayoutParametersButtons.addWidget(self.toolButtonDefaults)
        self.verticalLayout.addLayout(self.horizontalLayoutParametersButtons)
        self.tabWidget.addTab(self.tabParameters, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionApply_suggestion = QtWidgets.QAction(MainWindow)
        self.actionApply_suggestion.setObjectName("actionApply_suggestion")
        self.actionApply_suggestions_category = QtWidgets.QAction(MainWindow)
        self.actionApply_suggestions_category.setObjectName("actionApply_suggestions_category")
        self.actionApply_all_suggestions = QtWidgets.QAction(MainWindow)
        self.actionApply_all_suggestions.setObjectName("actionApply_all_suggestions")
        self.actionUndo_suggestion = QtWidgets.QAction(MainWindow)
        self.actionUndo_suggestion.setObjectName("actionUndo_suggestion")
        self.actionUndo_suggestions_category = QtWidgets.QAction(MainWindow)
        self.actionUndo_suggestions_category.setObjectName("actionUndo_suggestions_category")
        self.actionUndo_all_suggestions = QtWidgets.QAction(MainWindow)
        self.actionUndo_all_suggestions.setObjectName("actionUndo_all_suggestions")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.horizontalSliderDifference.valueChanged['int'].connect(self.spinBoxDifference.setValue)
        self.spinBoxDifference.valueChanged['int'].connect(self.horizontalSliderDifference.setValue)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.tabWidget, self.treeWidget)
        MainWindow.setTabOrder(self.treeWidget, self.checkBoxBogus)
        MainWindow.setTabOrder(self.checkBoxBogus, self.checkBoxMissing)
        MainWindow.setTabOrder(self.checkBoxMissing, self.toolButtonCancel)
        MainWindow.setTabOrder(self.toolButtonCancel, self.toolButtonScan)
        MainWindow.setTabOrder(self.toolButtonScan, self.horizontalSliderDifference)
        MainWindow.setTabOrder(self.horizontalSliderDifference, self.spinBoxDifference)
        MainWindow.setTabOrder(self.spinBoxDifference, self.horizontalSliderRatio)
        MainWindow.setTabOrder(self.horizontalSliderRatio, self.doubleSpinBoxRatio)
        MainWindow.setTabOrder(self.doubleSpinBoxRatio, self.textEdit)
        MainWindow.setTabOrder(self.textEdit, self.toolButtonDefaults)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Scene Change Scanner"))
        self.treeWidget.headerItem().setText(0, _translate("MainWindow", "Timecode"))
        self.treeWidget.headerItem().setText(1, _translate("MainWindow", "Difference"))
        self.treeWidget.headerItem().setText(2, _translate("MainWindow", "Ratio"))
        self.checkBoxBogus.setText(_translate("MainWindow", "Bogus"))
        self.checkBoxMissing.setText(_translate("MainWindow", "Missing"))
        self.toolButtonCancel.setText(_translate("MainWindow", "Cancel"))
        self.toolButtonScan.setText(_translate("MainWindow", "Scan"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabScan), _translate("MainWindow", "Scan"))
        self.labelRatio.setText(_translate("MainWindow", "Ratio"))
        self.labelDifference.setText(_translate("MainWindow", "Difference"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\" bgcolor=\"#eeeeee\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Difference (0%-100%):<br /></span><span style=\" font-size:9pt;\">Scene changes that have a difference percentage (compared to previous frames) below this threshold will be reported as bogus.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Ratio (x1.0-x20.0):<br /></span><span style=\" font-size:9pt;\">Each subtitle starting and ending zone will be scanned for a missing scene change. A missing scene change will be reported if </span><span style=\" font-size:9pt; font-style:italic;\">highest </span><span style=\" font-size:8pt;\"> / </span><span style=\" font-size:9pt; font-style:italic;\">median</span><span style=\" font-size:9pt;\"> is greater or equal to this threshold, where </span><span style=\" font-size:9pt; font-style:italic;\">highest</span><span style=\" font-size:9pt;\"> is the frame that has the highest difference in the zone, and </span><span style=\" font-size:9pt; font-style:italic;\">median</span><span style=\" font-size:9pt;\"> is the median of the differences in the zone.</span></p></body></html>"))
        self.toolButtonDefaults.setText(_translate("MainWindow", "Defaults"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabParameters), _translate("MainWindow", "Parameters"))
        self.actionApply_suggestion.setText(_translate("MainWindow", "Apply suggestion"))
        self.actionApply_suggestions_category.setText(_translate("MainWindow", "Apply suggestions in this category"))
        self.actionApply_all_suggestions.setText(_translate("MainWindow", "Apply all suggestions"))
        self.actionUndo_suggestion.setText(_translate("MainWindow", "Undo suggestion"))
        self.actionUndo_suggestions_category.setText(_translate("MainWindow", "Undo suggestions in this category"))
        self.actionUndo_all_suggestions.setText(_translate("MainWindow", "Undo all suggestions"))

